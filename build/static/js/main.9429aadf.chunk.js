(this["webpackJsonpxstate-react-typescript-template"]=this["webpackJsonpxstate-react-typescript-template"]||[]).push([[0],{24:function(t,e,n){},35:function(t,e,n){"use strict";n.r(e);var o=n(23),a=n(8),s=(n(24),n(7),n(20)),r=n(41),c=n(4),i=n(40),p=n(39);function l(t){return Object(c.k)((e=>({type:"SPEAK",value:t})))}function m(){return Object(c.k)("LISTEN")}const y={John:{person:"John Appleseed"},Jamal:{person:"Jamal Youssef"},Jennifer:{person:"Jennifer Lawrence"},Sophia:{person:"Sophia Bush"},Morgan:{person:"Morgan Freeman"},Tom:{person:"Tom Hanks"},"on Monday":{day:"Monday"},"on Tuesday":{day:"Tuesday"},"on Wednesday":{day:"Wednesday"},"on Thursday":{day:"Thursday"},"on Friday":{day:"Friday"},"at 6":{time:"6 am"},"at 7":{time:"7 am"},"at 8":{time:"8 am"},"at 9":{time:"9 am"},"at 10":{time:"10 am"},"at 11":{time:"11 am"},"at 12":{time:"12 pm"}},d={yes:{yes_no:!0},"yes, please":{yes_no:!0},"of course":{yes_no:!0},"no doubt":{yes_no:!0},absolutely:{yes_no:!0},yep:{yes_no:!0},"I do":{yes_no:!0},"go ahead":{yes_no:!0},no:{yes_no:!1},"no, I don't":{yes_no:!1},"no way":{yes_no:!1},"of course not":{yes_no:!1},nope:{yes_no:!1},"hell not":{yes_no:!1},"not sure":{yes_no:!1}},u={initial:"welcome",states:{init:{on:{CLICK:"welcome"}},welcome:{initial:"prompt",on:{ENDSPEECH:"who"},states:{prompt:{entry:l("Let's create an appointment")}}},who:{initial:"prompt",on:{RECOGNISED:[{cond:t=>"person"in(y[t.recResult]||{}),actions:Object(c.b)((t=>({person:y[t.recResult].person}))),target:"day"},{target:".nomatch"}]},states:{prompt:{entry:l("Who are you meeting with?"),on:{ENDSPEECH:"ask"}},ask:{entry:m()},nomatch:{entry:l("Sorry I don't know them! Please choose who you're meeting with."),on:{ENDSPEECH:"ask"}}}},day:{initial:"prompt",on:{RECOGNISED:[{cond:t=>"day"in(y[t.recResult]||{}),actions:Object(c.b)((t=>({day:y[t.recResult].day}))),target:"whole_day"},{target:".nomatch"}]},states:{prompt:{entry:Object(c.k)((t=>({type:"SPEAK",value:"OK. ".concat(t.person,". On which day is your meeting?")}))),on:{ENDSPEECH:"ask"}},ask:{entry:m()},nomatch:{entry:l("If you seek an appointment during the weekend, that's not possible. Please choose another day"),on:{ENDSPEECH:"ask"}}}},whole_day:{initial:"prompt",on:{RECOGNISED:[{target:"confirm_whole_day",cond:t=>!0===d[t.recResult].yes_no},{target:"time",cond:t=>!1===d[t.recResult].yes_no},{target:".nomatch"}]},states:{prompt:{entry:Object(c.k)((t=>({type:"SPEAK",value:"Will it take the whole day?"}))),on:{ENDSPEECH:"ask"}},ask:{entry:m()},nomatch:{entry:l("Sorry I don't understand what you said, Can you repeat?"),on:{ENDSPEECH:"ask"}}}},confirm_whole_day:{initial:"prompt",on:{RECOGNISED:[{target:"confirm_appointment",cond:t=>!0===d[t.recResult].yes_no},{target:"who",cond:t=>!1===d[t.recResult].yes_no},{target:".nomatch"}]},states:{prompt:{entry:Object(c.k)((t=>({type:"SPEAK",value:"Do you want me to create an appointment with ".concat(t.person," \n                                    on ").concat(t.day," for the whole day?")}))),on:{ENDSPEECH:"ask"}},ask:{entry:m()},nomatch:{entry:l("Sorry I don't understand what you said, Can you repeat?"),on:{ENDSPEECH:"ask"}}}},time:{initial:"prompt",on:{RECOGNISED:[{cond:t=>"time"in(y[t.recResult]||{}),actions:Object(c.b)((t=>({time:y[t.recResult].time}))),target:"confirm_time_appointment"},{target:".nomatch"}]},states:{prompt:{entry:Object(c.k)((t=>({type:"SPEAK",value:"What time is your meeting?"}))),on:{ENDSPEECH:"ask"}},ask:{entry:m()},nomatch:{entry:l("Sorry the time you chose is not available. Please choose a different time!"),on:{ENDSPEECH:"ask"}}}},confirm_time_appointment:{initial:"prompt",on:{RECOGNISED:[{target:"confirm_appointment",cond:t=>!0===d[t.recResult].yes_no},{target:"who",cond:t=>!1===d[t.recResult].yes_no},{target:".nomatch"}]},states:{prompt:{entry:Object(c.k)((t=>({type:"SPEAK",value:"Do you want me to create an appointment with ".concat(t.person," \n                                    on ").concat(t.day," at ").concat(t.time,"?")}))),on:{ENDSPEECH:"ask"}},ask:{entry:m()},nomatch:{entry:l("Sorry I don't understand what you said, Can you repeat?"),on:{ENDSPEECH:"ask"}}}},confirm_appointment:{initial:"confirm",states:{confirm:{entry:l("Your appointment has been created")}}}}};function h(t){return{initial:"prompt",states:{prompt:{entry:l(t),on:{ENDSPEECH:"ask"}},ask:{entry:Object(c.k)("LISTEN")}}}}const E={initial:"init",states:{init:{on:{CLICK:"welcome"}},welcome:Object(a.a)({on:{RECOGNISED:{target:"invocation",actions:Object(c.b)((t=>({query:t.recResult})))}}},h("What do you want to do?")),invocation:{invoke:{id:"machine",src:(t,e)=>{return n=t.query,fetch(new Request("https://cors-anywhere.herokuapp.com/https://create-appointment.herokuapp.com/model/parse",{method:"POST",headers:{Origin:"http://maraev.me"},body:'{"text": "'.concat(n,'"}')})).then((t=>t.json()));var n},onDone:{target:"go_to",actions:[Object(c.b)(((t,e)=>({output:e.data.intent.name}))),(t,e)=>console.log(e.data)]},onError:{target:"welcome",actions:(t,e)=>console.log(e.data)}}},go_to:{entry:Object(c.k)("RECOGNISED"),on:{RECOGNISED:[{target:"appointment_machine",cond:t=>"appointment"===t.output},{target:"todo",cond:t=>"to_do"===t.output},{target:"set_timer",cond:t=>"timer"===t.output}]}},appointment_machine:Object(a.a)({},u),todo:{initial:"prompt",states:{prompt:Object(a.a)({},h("I'll add a new item to you to_do list?"))}},set_timer:{initial:"prompt",states:{prompt:Object(a.a)({},h("I will set a new timer?"))}}}};var g=n(19),b=n(12);Object(p.a)({url:"https://statecharts.io/inspect",iframe:!1});const S=Object(r.a)({id:"root",type:"parallel",states:{dm:Object(a.a)({},E),asrtts:{initial:"idle",states:{idle:{on:{LISTEN:"recognising",SPEAK:{target:"speaking",actions:Object(c.b)(((t,e)=>({ttsAgenda:e.value})))}}},recognising:{entry:"recStart",exit:"recStop",on:{ASRRESULT:{actions:["recLogResult",Object(c.b)(((t,e)=>({recResult:e.value})))],target:".match"},RECOGNISED:"idle"},states:{match:{entry:Object(c.k)("RECOGNISED")}}},speaking:{entry:"ttsStart",on:{ENDSPEECH:"idle"}}}}}},{actions:{recLogResult:t=>{console.log("<< ASR: "+t.recResult)},test:()=>{console.log("test")},logIntent:t=>{console.log("<< NLU intent: "+t.nluData.intent.name)}}}),O=t=>{switch(!0){case t.state.matches({asrtts:"recognising"}):return Object(b.jsx)("button",Object(a.a)(Object(a.a)({type:"button",className:"glow-on-hover",style:{animation:"glowing 20s linear"}},t),{},{children:"Listening..."}));case t.state.matches({asrtts:"speaking"}):return Object(b.jsx)("button",Object(a.a)(Object(a.a)({type:"button",className:"glow-on-hover",style:{animation:"bordering 1s infinite"}},t),{},{children:"Speaking..."}));default:return Object(b.jsx)("button",Object(a.a)(Object(a.a)({type:"button",className:"glow-on-hover"},t),{},{children:"Click to start"}))}};function j(){const t=Object(g.useSpeechSynthesis)({onEnd:()=>{m("ENDSPEECH")}}),e=t.speak,n=t.cancel,a=(t.speaking,Object(g.useSpeechRecognition)({onResult:t=>{m({type:"ASRRESULT",value:t})}})),s=a.listen,r=(a.listening,a.stop),c=Object(i.b)(S,{devTools:!0,actions:{recStart:Object(i.a)((()=>{console.log("Ready to receive an answer."),s({interimResults:!1,continuous:!0})})),recStop:Object(i.a)((()=>{console.log("Recognition stopped."),r()})),changeColour:Object(i.a)((t=>{console.log("Repainting..."),document.body.style.background=t.recResult})),ttsStart:Object(i.a)(((t,n)=>{console.log("Speaking..."),e({text:t.ttsAgenda})})),ttsCancel:Object(i.a)(((t,e)=>{console.log("TTS STOP..."),n()}))}}),p=Object(o.a)(c,3),l=p[0],m=p[1];p[2];return Object(b.jsx)("div",{className:"App",children:Object(b.jsx)(O,{state:l,onClick:()=>m("CLICK")})})}const k=document.getElementById("root");s.render(Object(b.jsx)(j,{}),k)}},[[35,1,2]]]);
//# sourceMappingURL=main.9429aadf.chunk.js.map